#!/usr/bin/env python

import pandas as pd
from os import path
from glob import glob

config_file = pd.read_table('Parameters/RunConfig.cfg')

out = open('config.make', 'w')
targets = ' '.join(path.join('$(ANALYSIS_DIR)',
                             label,
                             'genes.fpkm_tracking')
                   for label in config_file['Label'])
yeasts = ' '.join(path.join('$(ANALYSIS_DIR)',
                            row['Label'],
                            row['CarrierID']+'.bam')
                  for i, row in config_file.iterrows())

out.write("FPKMS = " + targets + "\n")
out.write("yeasts : " + yeasts + 
          "\n\ttar -cvzf $(ANALYSIS_DIR)/yeast.tgz"
          "      $(ANALYSIS_DIR)/*/Y*.bam"
          "\n\t@echo 'Done making yeast'\n")

for i, row in config_file.iterrows():
    label = row['Label']
    index = row['Index']
    rf1 = glob('sequence/*_{id}?_*index{index}/*_R1_*.fastq*'
               .format(index=index, id=row['MBEPC']))
    rf2 = glob('sequence/*_{id}?_*_index{index}_*/*_R2_*.fastq*'
               .format(index=index, id=row['MBEPC']))

    out.write('$(ANALYSIS_DIR)/{label}: | $(ANALYSIS_DIR)\n'
              '\t mkdir$(ANALYSIS_DIR)/{label}\n'.format(label=label))
    out.write('$(ANALYSIS_DIR)/{label}/accepted_hits.bam: |'
              '$(ANALYSIS_DIR)/{label}\n'
              '\t@echo {label} \n'
              '\tSTAR --parametersFiles $(STARCONFIG) '
              '--genomeDir Reference/{genome} '
              '--outFileNamePrefix $(ANALYSIS_DIR)/{label}/ '
              '--readFilesIn {rf1} {rf2}\n'
              '\tsamtools view -bS -o $(ANALYSIS_DIR)/{label}/accepted_hits.bam'
              ' $(ANALYSIS_DIR)/{label}/Aligned.out.sam\n'
              '\trm $(ANALYSIS_DIR)/{label}/Aligned.out.sam\n'
             .format(rf1=','.join(rf1),
                     rf2=','.join(rf2),
                     label=label,
                     genome='DmelScer'
                    ))
    out.write('$(ANALYSIS_DIR)/{label}/{yeast}.bam:  '
              '$(ANALYSIS_DIR)/{label}/assigned_scer.bam\n'
              '\t@echo {yeast} \n'
              # Sort
              '\tsamtools sort $(ANALYSIS_DIR)/{label}/assigned_scer.bam '
              ' $(ANALYSIS_DIR)/{label}/assigned_scer_sorted \n'
              # Make new header
              "\tsamtools view -H $(ANALYSIS_DIR)/{label}/assigned_scer.bam"
              " | grep -Pv 'SN(?!scer)' >"
              " $(ANALYSIS_DIR)/{label}/cer_only.header.sam\n"
              # Apply new header
              "\tsamtools reheader "
              " $(ANALYSIS_DIR)/{label}/cer_only.header.sam"
              " $(ANALYSIS_DIR)/{label}/assigned_scer_sorted.bam > $@ \n"
              # Remove temporary
              "\t rm $(ANALYSIS_DIR)/{label}/assigned_scer_sorted.bam\n"
              .format(label=label, yeast=row['CarrierID']))
